name: Clash7 CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_CHANNEL: stable
  DART_VERSION: "3.1.0"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Check for relevant changes
      id: check
      run: |
        if git rev-parse --verify HEAD~1 > /dev/null 2>&1; then
          changed_files=$(git diff --name-only HEAD~1 HEAD)
        else
          changed_files=$(git ls-tree --name-only -r HEAD)
        fi
        
        echo "Changed files: $changed_files"
        if [[ -z "$changed_files" ]] || [[ "$changed_files" =~ (backend/|frontend/|\.github/workflows/) ]]; then
          echo "should_build=true" >> $GITHUB_OUTPUT
        else
          echo "should_build=false" >> $GITHUB_OUTPUT
        fi

  backend:
    needs: setup
    if: needs.setup.outputs.should_build == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        os: [ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            python-version: "3.10"
      fail-fast: false  # 不因单个失败取消其他任务
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.local/lib/python${{ matrix.python-version }}/site-packages
          backend/__pycache__
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('backend/requirements.txt') }}
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt pytest coverage pyinstaller
    
    - name: Run tests
      run: |
        cd backend
        pytest --cov=. || echo "Tests failed but continuing"  # 测试失败不终止流程
    
    - name: Build executable
      run: |
        cd backend
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          pyinstaller --onefile --name clash7_backend.exe main.py
          mkdir -p ../artifacts/${{ runner.os }}
          cp dist/clash7_backend.exe ../artifacts/${{ runner.os }}/
        else
          pyinstaller --onefile --name clash7_backend main.py
          mkdir -p ../artifacts/${{ runner.os }}
          cp dist/clash7_backend ../artifacts/${{ runner.os }}/
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-${{ runner.os }}-py${{ matrix.python-version }}
        path: ./artifacts/${{ runner.os }}/
        compression-level: 9
        if-no-files-found: error

  flutter-build:
    needs: setup
    if: needs.setup.outputs.should_build == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        flutter-version: ["3.16.0"]  # 只使用稳定版本
        include:
          - os: ubuntu-latest
            build-target: [apk, appbundle]
          - os: windows-latest
            build-target: windows
          - os: macos-latest
            build-target: macos
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK (Android only)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Flutter ${{ matrix.flutter-version }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ matrix.flutter-version }}
        channel: ${{ env.FLUTTER_CHANNEL }}
    
    - name: Cache Flutter dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          frontend/.dart_tool
          /opt/hostedtoolcache/flutter
        key: ${{ runner.os }}-flutter-${{ matrix.flutter-version }}-${{ hashFiles('frontend/pubspec.lock') }}
    
    - name: Install dependencies
      run: |
        cd frontend
        flutter pub get
    
    - name: Run analyzer
      run: |
        cd frontend
        flutter analyze
    
    - name: Run tests
      run: |
        cd frontend
        flutter test || echo "Tests failed but continuing"
    
    - name: Build ${{ matrix.build-target }}
      run: |
        cd frontend
        flutter pub run build_runner build --delete-conflicting-outputs
        flutter build ${{ matrix.build-target }} --release
        
        mkdir -p ../artifacts/${{ matrix.build-target }}
        
        if [[ "${{ matrix.build-target }}" == "apk" ]]; then
          cp build/app/outputs/flutter-apk/app-release.apk ../artifacts/${{ matrix.build-target }}/
        elif [[ "${{ matrix.build-target }}" == "appbundle" ]]; then
          cp build/app/outputs/bundle/release/app-release.aab ../artifacts/${{ matrix.build-target }}/
        elif [[ "${{ matrix.build-target }}" == "windows" ]]; then
          cp -r build/windows/runner/Release/* ../artifacts/${{ matrix.build-target }}/
        elif [[ "${{ matrix.build-target }}" == "macos" ]]; then
          cp -r build/macos/Build/Products/Release/clash7.app ../artifacts/${{ matrix.build-target }}/
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: flutter-${{ matrix.build-target }}-${{ matrix.flutter-version }}
        path: ./artifacts/${{ matrix.build-target }}/
        compression-level: 9
        if-no-files-found: error

  release:
    needs: [backend, flutter-build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./release-artifacts
    
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        name: Clash7 v1.0.0
        body: |
          ### Build Info
          - Flutter: ${{ env.FLUTTER_VERSION }}
          - Python: 3.10, 3.11
          - Platforms: Windows, macOS, Linux, Android
          
          ### Artifacts
          - Android APK/Bundle
          - Windows Executable
          - macOS Application
          - Linux Backend
        draft: false
        prerelease: false
        files: |
          release-artifacts/**/*
